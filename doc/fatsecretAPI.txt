http://platform.fatsecret.com/api/

https://github.com/deviantech/food_info
http://groups.google.com/group/fatsecret-platform-api/msg/2def5d40c867c521

FatSecret Platform not only offered the food and exercise calorie calculator, but did it with a very easy to use API. The search feature of adding food and exercise to your daily totals was very fast and efficient. It also returned search results in an order that was easy to use and kept with the simple interface Shrinking has. Shrinking quickly interfaced with FatSecret to create a handy three tab interface for Food Diary, Exercise Diary, and a Calendar. Each FatSecret profile is linked to your own individual Shrinking account, so you can track your personal food calorie intake and calories used during exercise. The calendar lets you see your calories eaten and burned on a daily basis by month.


Your API Access Key is:
696696409eda45e289e527629e59ac96

Using your Key with the JavaScript API:
This key is good for all URL's coming from the following URL:
http://www.blueyfit.com
To use this key with the JavaScript URL, assign it to the key script URL parameter value as follows:
<script src="http://platform.fatsecret.com/js?key=696696409eda45e289e527629e59ac96"></script>


REST API Consumer Key:
Your REST API Consumer Key is the same value as your API key, i.e.:
696696409eda45e289e527629e59ac96

Your REST API Shared Secret is provided below.
REST API Shared Secret:
dde77c64a8e0401aa9a7af53eba163eb


Storable Data

Per the Developer Terms of Service, you may not cache any user data for more than 24 hours, with the exception of information that is explicitly "storable indefinitely". Only the following parameters are storable indefinitely; all other information must be requested from FatSecret each time.

FatSecret data you can store indefinitely include:

food_id - the unique food identifier.
food_entry_id - the unique identifier of the food diary entry.
serving_id - the unique serving identifier.
recipe_id - the unique recipe identifier.
saved_meal_id - the unique saved meal identifier.
saved_meal_item_id - the unique saved meal item identifier.
exercise_id - the unique exercise identifier.

In addition, you may store the auth_token and auth_secret.

The storable IDs enable you to keep unique identifiers for FatSecret elements that correspond to data gathered by your application.


 FoodInfo.search('cheese').map {|food| food if food.kind == "Generic" }.map(&:name)
 => ["Cheddar Cheese", "Colby Jack Cheese", "American Cheese", "Lowfat Cheddar or Colby Cheese", "Provolone Cheese", "Swiss Cheese", "Part Skim Mozzarella Cheese", "Natural Cheese", "Reduced Fat American Cheese", "American Cheese (Cold Pack)", "Cheddar or American Type Cheese", "Ricotta Cheese (Part Skim Milk)", "Monterey Cheese", "Cottage Cheese", "Blue Cheese", "Brie Cheese", "Camembert Cheese", "Colby Cheese", "Low Fat American Cheese", "Monterey Jack Cheese"] 



If all you want is an example of authentication with the API I can help you with that. This API is only OAuth1 so we can use the standard oauth gem to reduce the boilerplate code that we need to write.

Using the OAuth gem we want to create a consumer and then make a request to the API like so:

@consumer = OAuth::Consumer.new("key", "secret", :site => "http://platform.fatsecret.com/rest/server.api")
@consumer.request(:post, '', token = nil, {:method => "recipe_types.get"})

